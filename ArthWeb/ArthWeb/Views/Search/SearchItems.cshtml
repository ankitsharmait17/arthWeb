
@{
    ViewBag.Title = "Search";
    Layout = "~/Views/Shared/MatLayout.cshtml";
    Dictionary<string, List<string>> catList = ViewBag.DDList;
    string markup = null;

    foreach (var item in catList)
    {
        markup += "<li>";
        markup += "<div class='collapsible-header'>" + item.Key.Replace('_',' ') + "</div>";
        markup += "<div class='collapsible-body'>";
        markup += "<ul class='list-unstyled' id='"+item.Key+"'>";
        foreach (string subType in item.Value)
        {
            markup += "<li>";
            markup += "<label for='" + subType + "'>";
            markup += "<input type='checkbox' id='" + subType + "'class='filterSubtype filled-in'><span>" + subType.Replace('_',' ') + "</span>";
            markup += "</label></li>";
        }
        markup += "</ul></div></li>";
    }
    string sizeMarkup = null;
    List<string> sizeList = ViewBag.sizes;
    foreach(string size in sizeList)
    {
        sizeMarkup += "<li>";
        sizeMarkup += "<label for='" + size + "'>";
        sizeMarkup += "<input type='checkbox' id='" + size + "'class='filterSize filled-in'><span>" + size + "</span>";
        sizeMarkup += "</label></li>";
    }
}

<style>
    .grid-img {
        width: 250px!important;
        height: 400px!important;
    }

    .img-div {
        padding: 20px;
    }

    @@media (min-width: 768px) {
        .addBtn {
            display: none;
        }

        .viewBtn {
            display: none;
        }

        .card-title {
            display: none;
        }
    }

    .card-image:hover .card-title{
        display: block;
    }

    .card-image:hover .addBtn{
        display: block;
    }

    .card-image:hover .viewBtn{
        display: block;
    }

    .card-image > img {
        width: 100px;
        height: 400px;
    }

    .sidenav li {
        margin: 10px;
    }

    .itemKeyspan{
        display:none;
    }

    .card{
        padding:10px;
    }



    .pagination li.active{
        background-color:black;
    }

    

</style>

<ul id="slide-out" class="sidenav">
    <li>
        <ul class="collapsible" data-collapsible="accordion">
            <li>FILTERS</li>
            <li><div class="divider"></div></li>
            <li>
                <div class="collapsible-header">FOR</div>
                <div class="collapsible-body">
                    <ul class="list-unstyled">
                        <li>
                            <label for="Men">
                                <input type="checkbox" id="Men" class="filterGender filled-in"><span>Men</span>
                            </label>
                        </li>
                        <li>
                            <label for="Women">
                                <input type="checkbox" id="Women" class="filterGender filled-in"><span>Women</span>
                            </label>
                        </li>
                    </ul>
                </div>
            </li>
            <li><div class="divider"></div></li>

            <li>
                <div class="collapsible-header">CATEGORIES</div>
                <div class="collapsible-body">
                    <ul class="collapsible" data-collapsible="accordion">
                        @Html.Raw(markup)
                    </ul>
                </div>
            </li>
            <li><div class="divider"></div></li>
            <li>
                <div class="collapsible-header">SIZES</div>
                <div class="collapsible-body">
                    <ul class="list-unstyled">
                        @Html.Raw(sizeMarkup)
                    </ul>
                </div>
            </li>
            <li><div class="divider"></div></li>
            <li>
                <div class="collapsible-header">PRICE</div>
                <div class="collapsible-body">
                    <ul class="list-unstyled">
                        <li>
                            <input id="fromPrice" placeholder="Start" type="text" onkeypress="return isNumber(event)">
                            <input id="toPrice" placeholder="End" type="text" onkeypress="return isNumber(event)">
                            <button class="btn btn-primary black" id="go">GO</button>
                        </li>
                    </ul>
                </div>
            </li>
            <li><div class="divider"></div></li>
        </ul>
    </li>
</ul>

<div class="container-fluid">
    <div class="row">
        <div class="col s6 m6 l7">
            <a href="#" data-target="slide-out" class="btn sidenav-trigger transparent black-text">FILTERS</a>
        </div>
        <div class="col s6 m6 l3">
            <select id="order">
                <option value="0" selected>Price: High to Low</option>
                <option value="1">Price: Low to High</option>
                <option value="2">Newest First</option>
                <option value="3">Most Popular</option>
            </select>
        </div>
        <div class="col s6 m6 l2">
            <button class="btn waves-effect waves-light black" id="clear" style="display:none">
                Clear Filters
            </button>
        </div>
    </div>
    <div class="row">
        <div class="col s12">
            <div class="disabled" id="chips">

            </div>
        </div>
    </div>
</div>

<div class="container-fluid itemContainer">
    <div class="row">

    </div>
</div>
<div class="container-fluid">
    <div class="row center">
        <ul class="pagination"></ul>
    </div>
</div>
<div id="sizeModal" class="modal bottom-sheet modal-fixed-footer">
    <div class="modal-content">
        <h5 class="modal-title">Select Size</h5><br/>
        <div class="row">
            <div class="col s12" id="itemSize">
                
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button class="btn waves-effect waves-light black" id="addToCart">Add to Cart</button>
    </div>
</div>




<script>
    var search, pageSize, startRec, order, itemKey, price, item,cat,gender;
    item = "@ViewBag.item";
    search = "@ViewBag.searchString";
    cat = "@ViewBag.cat";
    gender = "@ViewBag.gender";
    pageSize = 10;
    var itemLink = '@Url.Action("ViewItem", "Item")?itemKey=';
    function GetPrice(num) {
        var price=num.toLocaleString('en-IN', {
            maximumFractionDigits: 2,
            style: 'currency',
            currency: 'INR'
        });
        return price;
    }

    function isNumber(evt) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        return true;
    }

    $(document).ready(function () {
        $('#slide-out').sidenav({ edge:"right"});
        $('.collapsible').collapsible();
        $('select').formSelect();
        $('#sizeModal').modal();
        $('.chip').remove();
        $('.filterGender , .filterSubtype , .filterSize').prop('checked', false);
        $('#clear').css('display', 'none');
        $(".dropdown-content>li>a").css("color", "black");
        if (gender != "") {
            var markup = "<div class='chip chipsGender'><b>" + gender + "</b><i class='close material-icons' onClick='deleteChip(this)'>close</i></div>";
            $('#chips').append(markup);
            $('#' + gender).prop('checked', true);
        }
        if (item != "") {
            item = '#' + cat + ' > li  #' + item;
            console.log(item);
            $(item).click();
        }   
        if (search != "" && item=="")
        {
            GetItemsforGrid(search, null);
        }
    });

    function CreateItem(itemkey,price) {
        var container = $('.itemContainer>.row');
        var link = itemLink + itemkey;
        var markup = '<div class="col l3 m5 img-div">' +
            '<div class="card" >' +
            '<div class="card-image">' +
            '<img src="/Content/dewdrops-flora-flower-56866.jpg">' +
            '<span class="card-title">' + GetPrice(price) + '</span>' +
            '<span class="itemKeyspan">' + itemkey + '</span>' +
            '<a href="#" class="btn-floating halfway-fab left waves-effect waves-light btn-large black viewBtn"><i class="material-icons">zoom_in</i></a>' +
            '<button class="btn-floating halfway-fab waves-effect waves-light black addBtn btn-large"><i class="material-icons">add_shopping_cart</i></button>'+
            '</div>' +
            '</div>' +
            '</div >' +
            '<div class="col l1 m1"></div>';
        container.append(markup);
    }

    $('#go').on('click', function () {
        var start = $('#fromPrice').val();
        var end = $('#toPrice').val();
        if (start.length == 0 || end.length == 0) {
            return false;
        }
        $('.chipsPrice').remove();
        CreateChip(start + "-" + end, "chipsPrice");
    });

    function CreateChip(text,id)
    {
        var markup = "<div class='chip " + id + "'><b>" + text + "</b><i class='close material-icons' onClick='deleteChip(this)'>close</i></div>";
        $('#chips').append(markup);
        GetItemsforGrid(search, null);
    }

    $('.filterGender , .filterSubtype , .filterSize').on('click', function () {
        var isPresent = false;
        var text = $(this).attr('id');
        $('.chip').each(function () {
            if ($(this).find('b').text()==text) {
                isPresent = true;
                $(this).remove();
            }
        });
        if (!isPresent) {
            var cl = $(this).attr('class');
            if (cl.includes('filterGender'))
                cl = 'chipsGender';
            else if (cl.includes('filterSubtype'))
                cl = 'chipsSubtype';
            else if (cl.includes('filterSize'))
                cl = 'chipsSize';
            CreateChip(text, cl);
            //$('#clear').css('display', 'block');
        }
        else {
            GetItemsforGrid(search, null);
        }
        var l = $('#chips').children().length;
        if (l == 0) {
            $('#clear').css('display', 'none');
        }
        else {
            $('#clear').css('display', 'block');
        }
    });

    function deleteChip(element)
    {
        var id = element.previousElementSibling.innerHTML;
        element.parentNode.parentNode.removeChild(element.parentNode);
        $('#' + id).prop('checked', false);
        var l = $('#chips').children().length;
        if (l == 0) {
            $('#clear').css('display', 'none');
        }
        else {
            $('#clear').css('display', 'block');
        }
        GetItemsforGrid(search, null);
    }

    $('#clear').on('click', function () {
        $('.chip').remove();
        $('.filterGender , .filterSubtype , .filterPrice , .filterSize').prop('checked', false);
        $('#clear').css('display', 'none');
        GetItemsforGrid(search, null);
    });

    $('.page-link').on('click', function () {
        var page = parseInt($(this).text());
        $('.pagination > li').each(function () {
            if ($(this).hasClass('active')) {
                $(this).removeClass('active').addClass('waves-effect');

            }
        });
        $(this).parent().addClass('active').removeClass('waves-effect');
        var pagecount = $('.page-link').length;
        if (page == 1)
            $('.prev').parent().removeClass('waves-effect').addClass('disabled');
        else
            $('.prev').parent().addClass('waves-effect').removeClass('disabled');

        if (page == pagecount)
            $('.next').parent().removeClass('waves-effect').addClass('disabled');
        else
            $('.next').parent().addClass('waves-effect').removeClass('disabled');
        GetItemsforGrid(search, page);
    });

    $('.prev').on('click', function () {
        if (!$(this).parent().hasClass('disabled')) {
            var page = $('.pagination > .active >a').text();
            $('.pagination > li').each(function () {
                if ($(this).hasClass('active')) {
                    $(this).removeClass('active').addClass('waves-effect');
                }
            });
            $('.pagination > li').each(function () {
                if ($(this).text() == parseInt(page) - 1) {
                    $(this).addClass('active').removeClass('waves-effect');
                }
            });
            page = parseInt(page) - 1;
            var pagecount = $('.page-link').length;
            if (page == 1)
                $('.prev').parent().removeClass('waves-effect').addClass('disabled');
            else
                $('.prev').parent().addClass('waves-effect').removeClass('disabled');

            if (page == pagecount)
                $('.next').parent().removeClass('waves-effect').addClass('disabled');
            else
                $('.next').parent().addClass('waves-effect').removeClass('disabled');

            GetItemsforGrid(search, page);
        }
    });

    $('.next').on('click', function () {
        if (!$(this).parent().hasClass('disabled')) {
            var page = $('.pagination > .active >a').text();
            $('.pagination > li').each(function () {
                if ($(this).hasClass('active')) {
                    $(this).removeClass('active').addClass('waves-effect');
                }
                else {
                    if ($(this).text() == parseInt(page) + 1) {
                        $(this).addClass('active').removeClass('waves-effect');
                    }
                }
            });
            page = parseInt(page) + 1;
            var pagecount = $('.page-link').length;
            if (page == 1)
                $('.prev').parent().removeClass('waves-effect').addClass('disabled');
            else
                $('.prev').parent().addClass('waves-effect').removeClass('disabled');

            if (page == pagecount)
                $('.next').parent().removeClass('waves-effect').addClass('disabled');
            else
                $('.next').parent().addClass('waves-effect').removeClass('disabled');

            GetItemsforGrid(search, page);
        }
    });

    $('#order').on('change', function () {
        GetItemsforGrid(search, null);
    });

    $(document).on('click', '.addBtn', function () {
        itemKey = $(this).closest('div').find('.itemKeyspan').text();
        price = $(this).closest('div').find('.card-title').text();
        price = parseFloat(price.replace("\u20b9", ''));
        GetSizes(itemKey);
    });

    $('#addToCart').on('click', function () {
        var size = $("input[name=itemSize]:checked").val();;
        if (size == null || size.length == 0) {
            showWarningAlert("Please select a size.");
            return false;
        }
        AddToCart(itemKey, size,price);
    });

    function CreatePagination(length) {
        length = Math.ceil(length / pageSize);
        $('.pagination').empty();
        $('.pagination').append('<li class="disabled"><a href="#!" class="prev"><i class="material-icons">chevron_left</i></a></li>');
        $('.pagination').append("<li class='active'><a href='#!' class='page-link'>1</a></li>");
        for (var i = 2; i <= length; i++) {
            $('.pagination').append("<li class='waves-effect'><a href='#! class='page-link'>" + i + "</a></li>");
        }
        if (length == 1)
            $('.pagination').append('<li class="disabled"><a href="#!" class="next"><i class="material-icons">chevron_right</i></a></li>');
        else
            $('.pagination').append('<li class="waves-effect"><a href="#!" class="next"><i class="material-icons">chevron_right</i></a></li>');
    }

    function GetItemsforGrid(searchString,page){
        search = searchString;
        if (page == null) {
            startRec = 0;
        }
        else {
            startRec = pageSize * page;
        }
        order = $('#order').val();
        var filterGender = "";
        var filterSubtype = "";
        var filterPrice = "";
        var filterSize = "";
        $('.chipsGender').each(function () {
            filterGender += $(this).find('b').text() + "|";
        });
        $('.chipsSubtype').each(function () {
            filterSubtype += $(this).find('b').text() + "|";
        });
        $('.chipsPrice').each(function () {
            filterPrice += $(this).find('b').text();
        });
        $('.chipsSize').each(function () {
            filterSize += $(this).find('b').text() + "|";
        });
        $.ajax({
            url: "/Search/GetItemJsonData",
            type: "GET",
            data: {
                search: search,
                pageSize: pageSize,
                startRec: startRec,
                order: order,
                filterGender: filterGender,
                filterSubtype: filterSubtype,
                filterPrice: filterPrice,
                filterSize: filterSize
            },
            beforeSend: function () {
                showSpinner();
            },
            success: function (res) {
                if (res.Success) {
                    $('.itemContainer>.row').empty();
                    res.data.forEach(function (el,i) {
                        CreateItem(el.ItemKey,el.Price);
                    });
                    if(page==null)
                        CreatePagination(res.data.length);
                }
                else {
                    $('.pagination').empty();
                    $('.itemContainer>.row').empty();
                    $('.itemContainer>.row').append('<h3>' + res.Message + '</h3>');
                }
                hideSpinner();
            }
        });
    }

    function AddToCart(item,size,price) {
        $.ajax({
            url: '@Url.Action("Add","Cart")',
            type: 'POST',
            data: {
                ItemKey: item,
                Quantity: 1,
                Size: size,
                Price: price
            },
            beforeSend: function () {
                showSpinner();
            },
            success: function (res) {
                if (res.Success) {
                    //$('#cartLink').find('.badge').text(res.data);
                    $('.cartLink').each(function () {
                        $(this).find('.notification-badge').text(res.data);
                    });
                    $('#sizeModal').modal('close');
                    showSuccessAlert('Item added to cart.');
                }
                else {
                    showErrorAlert("Please try again.");
                }
                hideSpinner();
            }
        });
    }

    function GetSizes(item) {
        $.ajax({
            url: '@Url.Action("GetItemSizes", "Search")',
            type: 'GET',
            data: {
                itemKey: item
            },
            success: function(res) {
                if (res.Success) {
                    $('#itemSize').empty();
                    $.each(res.data, function (i, el) {
                        $('#itemSize').append('<label><input type="radio" name="itemSize" value="' + el.ItemSizeName + '"/><span>' + el.ItemSizeName +'</span></label>&nbsp;&nbsp;');
                    });
                    $('#sizeModal').modal('open');
                }
            }
        });
    }

    $(document).on('click', '.viewBtn', function () {
        var key = $(this).closest('div').find('.itemKeyspan').text();
        var link = itemLink + key;
        window.open(link, "_blank");
    });

</script>

