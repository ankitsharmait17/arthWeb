
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/MatLayout.cshtml";
    Dictionary<string, List<string>> catList = ViewBag.DDList;
    string markup = null;

    foreach (var item in catList)
    {
        markup += "<li>";
        markup += "<div class='collapsible-header'>" + item.Key + "</div>";
        markup += "<div class='collapsible-body'>";
        markup += "<ul class='list-unstyled'>";
        foreach (string subType in item.Value)
        {
            markup += "<li>";
            markup += "<label for='" + subType + "'>";
            markup += "<input type='checkbox' id='" + subType + "'class='filterSubtype'><span>" + subType + "</span>";
            markup += "</label></li>";
        }
        markup += "</ul></div></li>";
    }
}

<style>


    .list-group-item {
        border-left: 0;
    }

    .group-first {
        border-top: 0;
    }

    .group-last {
        border-bottom: 0;
    }

    .grid-img {
        width: 250px;
        height: 400px;
    }

    .img-div {
        padding: 20px;
    }

    .overlay {
        display: none;
    }

    .addBtn{
        display:none;
    }

    .card-title {
        display: none;
    }

    .card-image:hover .card-title{
        display: block;
    }

    .card-image:hover .addBtn {
        display: block;
    }

    .card-image > img {
        width: 100px;
        height: 400px;
    }

    .sidenav li {
        margin: 10px;
    }
</style>

<ul id="slide-out" class="sidenav">
    <li>
        <ul class="collapsible" data-collapsible="accordion">
            <li>FILTERS</li>
            <li><div class="divider"></div></li>
            <li>
                <div class="collapsible-header">FOR</div>
                <div class="collapsible-body">
                    <ul class="list-unstyled">
                        <li>
                            <label for="Men">
                                <input type="checkbox" id="Men" class="filterGender"><span>Men</span>
                            </label>
                        </li>
                        <li>
                            <label for="Women">
                                <input type="checkbox" id="Women" class="filterGender"><span>Women</span>
                            </label>
                        </li>
                    </ul>
                </div>
            </li>
            <li><div class="divider"></div></li>

            <li>
                <div class="collapsible-header">CATEGORIES</div>
                <div class="collapsible-body">
                    <ul class="collapsible" data-collapsible="accordion">
                        @Html.Raw(markup)
                    </ul>
                </div>
            </li>
            <li><div class="divider"></div></li>
            <li>
                <div class="collapsible-header">SIZES</div>
                <div class="collapsible-body">
                    <ul class="list-unstyled">
                        <li>
                            <label for="s">
                                <input type="checkbox" id="s"><span>S</span>
                            </label>
                        </li>
                        <li>
                            <label for="m">
                                <input type="checkbox" id="m"><span>M</span>
                            </label>
                        </li>
                        <li>
                            <label for="l">
                                <input type="checkbox" id="l"><span>L</span>
                            </label>
                        </li>
                    </ul>
                </div>
            </li>
            <li><div class="divider"></div></li>
            <li>
                <div class="collapsible-header">PRICE</div>
                <div class="collapsible-body">
                    <ul class="list-unstyled">
                        <li>
                            <label for="500-1000">
                                <input type="checkbox" id="500-1000" class="filterPrice"><span>Rs.500 to Rs.1000</span>
                            </label>
                        </li>
                        <li>
                            <label for="1000-5000">
                                <input type="checkbox" id="1000-5000" class="filterPrice"><span>Rs.1000 to Rs.5000</span>
                            </label>
                        </li>
                        <li>
                            <label for="5000-20000">
                                <input type="checkbox" id="5000-20000" class="filterPrice"><span>Rs.5000 to Rs.20000</span>
                            </label>
                        </li>
                    </ul>
                </div>
            </li>
            <li><div class="divider"></div></li>
        </ul>
    </li>
</ul>

<div class="col l12">
    <div class="row">
        <div class="col l8 left">
            <div class="row">
                <div class="disabled" id="chipsGender"></div>
            </div>
            <div class="row">
                <div class="disabled" id="chipsSubtype"></div>
            </div>
            <div class="row">
                <div class="disabled" id="chipsPrice"></div>
            </div>
        </div>
        <div class="col l1">
            <button class="btn waves-effect waves-light" id="clear" style="display:none">
                Clear
            </button>
        </div>
        <div class="col l1">
            <a href="#" data-target="slide-out" class="btn sidenav-trigger transparent black-text">FILTERS</a>
        </div>
        <div class="col l2">
            <select id="order">
                <option disabled selected>Sort By</option>
                <option value="0">Price: High to Low</option>
                <option value="1">Price: High to Low</option>
                <option value="2">Newest First</option>
                <option value="3">Most Popular</option>
            </select>
        </div>
    </div>
</div>

<div class="container-fluid itemContainer">
    <div class="row">

    </div>
</div>
<div class="container-fluid">
    <div class="row center">
        <ul class="pagination"></ul>
    </div>
</div>





<script>
    var search, pageSize, startRec, order;
    search = "@ViewBag.searchString";
    pageSize = 10;
    $(document).ready(function () {
        $('.collapsible').collapsible();
        $('select').formSelect();
        if (search != "")
        {
            GetItemsforGrid(search, null);
        }
    });

    function CreateItem(price) {
        var container = $('.itemContainer>.row');
        var markup = '<div class="col l3 img-div">' +
            '<div class="card" >' +
            '<div class="card-image">' +
            '<img src="/Content/dewdrops-flora-flower-56866.jpg">' +
            '<span class="card-title">Rs. ' + price + '</span>' +
            '<a class="btn-floating halfway-fab waves-effect waves-light red addBtn"><i class="material-icons">add</i></a>'+
            '</div>' +
            '</div>' +
            '</div >' +
            '<div class="col l1"></div>';
        container.append(markup);
    }

    function CreateChip(text,id)
    {
        var markup = "<div class='chip'><b>" + text + "</b><i class='close material-icons' onClick='deleteChip(this)'>close</i></div>";
        $('#' + id).append(markup);
        GetItemsforGrid(search, null);
    }

    $('.filterGender , .filterSubtype , .filterPrice').on('click', function () {
        var isPresent = false;
        var text = $(this).attr('id');
        $('.chip').each(function () {
            if ($(this).find('b').text()==text) {
                isPresent = true;
                $(this).remove();
            }
        });
        if (!isPresent) {
            var cl = $(this).attr('class');
            if (cl == 'filterGender')
                cl = 'chipsGender';
            else if (cl == 'filterSubtype')
                cl = 'chipsSubtype';
            else
                cl = 'chipsPrice';
            CreateChip(text, cl);
            //$('#clear').css('display', 'block');
        }
        var l1 = $('#chipsGender').children().length;
        var l2 = $('#chipsSubtype').children().length;
        var l3 = $('#chipsPrice').children().length;
        if ((l1 + l2 + l3) == 0) {
            $('#clear').css('display', 'none');
        }
        else {
            $('#clear').css('display', 'block');
        }
    });

    function deleteChip(element)
    {
        var id = element.previousElementSibling.innerHTML;
        element.parentNode.parentNode.removeChild(element.parentNode);
        $('#' + id).prop('checked', false);
        var l1 = $('#chipsGender').children().length;
        var l2 = $('#chipsSubtype').children().length;
        var l3 = $('#chipsPrice').children().length;
        if ((l1 + l2 + l3) == 0) {
            $('#clear').css('display', 'none');
        }
        else {
            $('#clear').css('display', 'block');
        }
        GetItemsforGrid(search, null);
    }

    $('#clear').on('click', function () {
        $('.chip').remove();
        $('.filterGender , .filterSubtype , .filterPrice').prop('checked', false);
        $('#clear').css('display', 'none');
        GetItemsforGrid(search, null);
    });

    $('.page-link').on('click', function () {
        var page = parseInt($(this).text());
        $('.pagination > li').each(function () {
            if ($(this).hasClass('active')) {
                $(this).removeClass('active').addClass('waves-effect');

            }
        });
        $(this).parent().addClass('active').removeClass('waves-effect');
        var pagecount = $('.page-link').length;
        if (page == 1)
            $('.prev').parent().removeClass('waves-effect').addClass('disabled');
        else
            $('.prev').parent().addClass('waves-effect').removeClass('disabled');

        if (page == pagecount)
            $('.next').parent().removeClass('waves-effect').addClass('disabled');
        else
            $('.next').parent().addClass('waves-effect').removeClass('disabled');
        GetItemsforGrid(search, page);
    });

    $('.prev').on('click', function () {
        if (!$(this).parent().hasClass('disabled')) {
            var page = $('.pagination > .active >a').text();
            $('.pagination > li').each(function () {
                if ($(this).hasClass('active')) {
                    $(this).removeClass('active').addClass('waves-effect');
                }
            });
            $('.pagination > li').each(function () {
                if ($(this).text() == parseInt(page) - 1) {
                    $(this).addClass('active').removeClass('waves-effect');
                }
            });
            page = parseInt(page) - 1;
            var pagecount = $('.page-link').length;
            if (page == 1)
                $('.prev').parent().removeClass('waves-effect').addClass('disabled');
            else
                $('.prev').parent().addClass('waves-effect').removeClass('disabled');

            if (page == pagecount)
                $('.next').parent().removeClass('waves-effect').addClass('disabled');
            else
                $('.next').parent().addClass('waves-effect').removeClass('disabled');

            GetItemsforGrid(search, page);
        }
    });

    $('.next').on('click', function () {
        if (!$(this).parent().hasClass('disabled')) {
            var page = $('.pagination > .active >a').text();
            $('.pagination > li').each(function () {
                if ($(this).hasClass('active')) {
                    $(this).removeClass('active').addClass('waves-effect');
                }
                else {
                    if ($(this).text() == parseInt(page) + 1) {
                        $(this).addClass('active').removeClass('waves-effect');
                    }
                }
            });
            page = parseInt(page) + 1;
            var pagecount = $('.page-link').length;
            if (page == 1)
                $('.prev').parent().removeClass('waves-effect').addClass('disabled');
            else
                $('.prev').parent().addClass('waves-effect').removeClass('disabled');

            if (page == pagecount)
                $('.next').parent().removeClass('waves-effect').addClass('disabled');
            else
                $('.next').parent().addClass('waves-effect').removeClass('disabled');

            GetItemsforGrid(search, page);
        }
    });

    $('#order').on('change', function () {
        GetItemsforGrid(search, null);
    });

    function CreatePagination(length) {
        length = Math.ceil(length / pageSize);
        $('.pagination').empty();
        $('.pagination').append('<li class="disabled"><a href="#!" class="prev"><i class="material-icons">chevron_left</i></a></li>');
        $('.pagination').append("<li class='active'><a href='#!' class='page-link'>1</a></li>");
        for (var i = 2; i <= length; i++) {
            $('.pagination').append("<li class='waves-effect'><a href='#! class='page-link'>" + i + "</a></li>");
        }
        if (length == 1)
            $('.pagination').append('<li class="disabled"><a href="#!" class="next"><i class="material-icons">chevron_right</i></a></li>');
        else
            $('.pagination').append('<li class="waves-effect"><a href="#!" class="next"><i class="material-icons">chevron_right</i></a></li>');
    }

    function GetItemsforGrid(searchString,page){
        search = searchString;
        if (page == null) {
            startRec = 0;
        }
        else {
            startRec = pageSize * page;
        }
        order = $('#order').val();
        var filterGender = "";
        var filterSubtype = "";
        var filterPrice = "";
        $('#chipsGender>.chip').each(function () {
            filterGender += $(this).find('b').text() + "|";
        });
        $('#chipsSubtype>.chip').each(function () {
            filterSubtype += $(this).find('b').text() + "|";
        });
        $('#chipsPrice>.chip').each(function () {
            filterPrice += $(this).find('b').text() + "|";
        });
        $.ajax({
            url: "/Search/GetItemJsonData",
            type: "GET",
            data: {
                search: search,
                pageSize: pageSize,
                startRec: startRec,
                order: order,
                filterGender: filterGender,
                filterSubtype: filterSubtype,
                filterPrice: filterPrice
            },
            success: function (res) {
                if (res.Success) {
                    $('.itemContainer>.row').empty();
                    res.data.forEach(function (el,i) {
                        CreateItem(el.Price);
                    });
                    if(page==null)
                        CreatePagination(res.data.length);
                }
                else {
                    $('.pagination').empty();
                    $('.itemContainer>.row').empty();
                    $('.itemContainer>.row').append('<h3>' + res.Message + '</h3>');
                }
            }
        });
    }



</script>

