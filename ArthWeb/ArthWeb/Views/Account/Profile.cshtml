@using BE.Models
@using BE
@model UserAddressModel
@{
    ViewBag.Title = "Profile";
    Layout = "~/Views/Shared/MatLayout.cshtml";
    decimal price = 0;
}
<style>
    p {
        margin: 2px;
    }

    .l3 {
        margin: 10px !important;
    }

    .tabs .indicator{
        background-color:grey!important;
    }

    .tabs .active{
        background-color:white!important;
    }
     
</style>
<div class="row">
    <div class="col s12 m8 offset-m2 l6 offset-l3">
        <div class="card-panel grey lighten-5 z-depth-1">
            <div class="row valign-wrapper">
                <div class="col s2">
                    <i class="material-icons">account_circle</i> <!-- notice the "circle" class -->
                </div>
                <div class="col s10">
                    <span class="black-text">
                        Hello @Model.Name . You can manage your account from here.
                    </span>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">

    <div class="col s12">
        <ul class="tabs white">
            <li class="tab col s3"><a class="active black-text" href="#account">Account</a></li>
            <li class="tab col s3"><a href="#address" class="black-text">Addresses</a></li>
            <li class="tab col s3"><a href="#orders" class="black-text">Orders</a></li>
        </ul>
    </div>
    <div id="account" class="col s12">
        <div class="card-panel">
            <div class="row">
                <div class="col s12 center">
                    <div class="input-field">
                        <label for="email">Email ID</label>
                        <input required="required" maxlength="254" value="@Model.Email" type="email" class="validate" id="email" disabled />
                    </div>
                    <div class="input-field">
                        <label for="fname">Name</label>
                        <input required="required" maxlength="50" type="text" id="fname" value="@Model.Name" />
                    </div>
                    <div class="input-field">
                        <label for="phone">Phone</label>
                        <input maxlength="10" type="text" id="phone" value="@Model.Phone" onkeypress="return isNumber(event)" />
                    </div>
                </div>
                <button class="btn waves-effect waves-light black" id="submitBtn" disabled>Submit</button>
                <button class="btn waves-effect waves-light modal-trigger black" data-target="pwdModal" id="changepwd">Change Password</button>
            </div>
        </div>
    </div>
    <div id="address" class="col s12">
        <br />
        <div class="row center">
            <button class="waves-effect waves-light btn black" id="addTrigger"><i class="fab fa-plus-circle fa-sm white-text"></i> Add</button>
        </div>
        <div id="panelDiv">
            <div class="row">
                @foreach (var add in @Model.Addresses)
                {
                    <div class="card-panel col l3 m5 s11" id="addDiv-@add.AddressID">
                        <div class="row">
                            <div class="col m12 l12 s12">
                                <p><span class="name"><b>@add.Name</b></span></p>
                                <p><span class="address">@add.AddressDetail</span>,<span class="city">@add.City</span>,<span class="state">@add.State</span> - <span class="pin">@add.Pin</span></p>
                                @if (add.Landmark != null)
                                {<p><span class="landmark">@add.Landmark</span></p>}
                                <p><b>Phone:</b> <span class="phn">@add.Phone</span></p>
                                @if (add.AltPhone != null)
                                {
                                    <p><b>Alternate Phone:</b> <span class="altphn">@add.AltPhone</span></p>
                                }
                                <span class="addressID" style="display:none">@add.AddressID</span>
                                <span class="addressType" style="display:none">@add.Type</span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col s12 m12 l12">
                                <button class="btn-flat waves-effect deleteLink right"><i class="material-icons">close</i></button>
                                <button class="btn-flat waves-effect editLink right"><i class="material-icons">create</i></button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <div id="orders" class="col s12 m12 l12">
        <ul class="collapsible">
            @foreach(var order in Model.Orders)
            {
                price = 0;
            <li>
                <div class="collapsible-header">Order#: @order.OrderID</div>
                <div class="collapsible-body">
                    <ul class="collection">
                        @foreach (var orderdetail in order.OrderDetails)
                        {
                            <li class="collection-item avatar">
                                <img src="/Content/dewdrops-flora-flower-56866.jpg" alt="" class="circle">
                                <span class="title"><a href="@Url.Action("ViewItem","Item")?itemKey=@orderdetail.ItemKey" class="grey-text">@orderdetail.ItemDesc</a></span>
                                <p>
                                    <b>Size</b>: @orderdetail.Size<br>
                                    <b>Quantity</b>: @orderdetail.Quantity
                                </p>
                            </li>
                            price += orderdetail.PricePerItem * orderdetail.Quantity;
                        }
                    </ul>
                    <p class="left-align">
                        <b>Order Date</b>: @order.OrderDate
                    </p>
                    <p class="left-align">
                        <b>Status</b>: @order.Status
                    </p>
                    <p class="left-align">
                        @if (order.Status.Equals("Delivered"))
                        {
                            <b>Date Delivered:</b> @order.OrderDeliveredDate
                        }
                        else if (order.Status.Equals("Shipped") || order.Status.Equals("Packed") || order.Status.Equals("Placed"))
                        {
                            <b>Delivered by:</b> @order.OrderDeliveryDate
                        }
                    </p>

                    <p class="right-align"><b>Order Total</b>: Rs. @price &nbsp;&nbsp;&nbsp;<a href="@Url.Action("ViewOrder","Account")?orderID=@order.OrderID" class="grey-text">SEE DETAILS</a></p>
                    @if (order.Status.Equals("Placed") || order.Status.Equals("Packed"))
                    {
                        <p class="left-align"><button class="btn btn-primary cancelOrder black" id="@order.OrderID">Cancel Order</button></p>
                    }
                    else if (order.Status.Equals("Delivered"))
                    {
                        <p class="left-align"><button class="btn btn-primary returnOrder black" id="@order.OrderID">Return</button></p>
                    }
                </div>
            </li>
            }
        </ul>
    </div>
</div>

<!--Address Modal Start -->
<div id="addModal" class="modal modal-fixed-footer">
    <div class="modal-content">
        <h5 class="modal-title">Add Address</h5><br />
        <input id="addID" type="text" style="display:none" />
        <div class="row">
            <div class="col l6 m6 s12">
                <label>
                    <input name="addType" value="Home" type="radio" id="Home" checked />
                    <span>Home</span>
                </label>
                <label>
                    <input name="addType" value="Work" id="Work" type="radio" />
                    <span>Work</span>
                </label>
            </div>
        </div>
        <div class="row">
            <div class="col l4 m4 s12 input-field">
                <label for="addName">Name</label>
                <input required="required" maxlength="50" type="text" id="addName" placeholder="Required" />
            </div>
            <div class="col l4 m4 s12 input-field">
                <label for="addPhone">Phone</label>
                <input required="required" maxlength="10" type="text" id="addPhone" placeholder="Required" onkeypress="return isNumber(event)" />
            </div>
        </div>
        <div class="row">
            <div class="col l4 m12 s12 input-field">
                <textarea id="addDet" class="materialize-textarea" placeholder="Required"></textarea>
                <label for="addDet">Address</label>
            </div>
            <div class="col l4 m6 s6 input-field">
                <label for="addCity">City</label>
                <input required="required" maxlength="50" type="text" id="addCity" placeholder="Required" />
            </div>
            <div class="col l4 m6 s6 input-field">
                <label for="addState">State</label>
                <input required="required" maxlength="50" type="text" id="addState" placeholder="Required" />
            </div>
        </div>
        <div class="row">
            <div class="col l4 m6 s6 input-field">
                <label for="addPin">Pin</label>
                <input required="required" maxlength="10" type="text" id="addPin" placeholder="Required" />
            </div>
            <div class="col l4 m6 s6 input-field">
                <label for="addLandmark">Landmark</label>
                <input maxlength="50" type="text" id="addLandmark" placeholder="Optional" />
            </div>
            <div class="col l4 m6 s6 input-field">
                <label for="addAltphone">Alternate Phone</label>
                <input maxlength="10" type="text" id="addAltphone" placeholder="Optional" />
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button class="btn waves-effect waves-light black" id="addBtn">Save</button>
    </div>
</div>
<!--Address Modal End -->


<div id="pwdModal" class="modal modal-fixed-footer">
    <div class="modal-content">
        <h5>Change Password</h5><br/>
        <div class="row">
            <div class="col s12 input-field">
                <label for="oldPwd">Old Password</label>
                <input type="password" id="oldPwd" required="required" class="validate" />
            </div>
            <div class="col s12 input-field">
                <label for="newPwd1">New Password</label>
                <input type="password" id="newPwd1" required="required" class="validate"/>
            </div>
            <div class="col s12 input-field">
                <label for="newPwd2">Confirm Password</label>
                <input type="password" id="newPwd2" required="required" class="validate" />
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button class="btn waves-effect waves-light" id="pwd">Save</button>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('.tabs').tabs();
        $('.collapsible').collapsible();
        //$('.modal').modal();
        $('#addModal').modal();
        $('#pwdModal').modal();
    });

    function isNumber(evt) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        return true;
    }

    $('#fname , #phone').on('keyup', function () {
        $('#submitBtn').prop('disabled', false);
    });

    $('#submitBtn').on('click', function () {
        var email = $('#email').val();
        var fname = $('#fname').val();
        if (fname.length == 0) {
            showWarningAlert("Name cannot be empty.");
            return;
        }
        $.ajax({
            url: "/Account/UpdateUser",
            type: 'POST',
            data: {
                EmailID: email,
                Name: fname,
                Phone: $('#phone').val()
            },
            beforeSend: function () {
                showSpinner();
            },
            success: function (res) {
                if (res.Success) {
                    showSuccessAlert("Details Updated.");
                }
                hideSpinner();
            }
        })

    });

    function CheckAddressForm() {
        if ($('#addName').val().length == 0) {
            showWarningAlert("Name for address cannot be empty.");
            return false;
        }

        if ($('#addPhone').val().length == 0) {
            showWarningAlert("Phone number cannot be empty.");
            return false;
        }

        if ($('#addDet').val().length == 0) {
            showWarningAlert("Address cannot be empty.");
            return false;
        }

        if ($('#addCity').val().length == 0) {
            showWarningAlert("City cannot be empty.");
            return false;
        }

        if ($('#addState').val().length == 0) {
            showWarningAlert("State cannot be empty.");
            return false;
        }

        if ($('#addPin').val().length == 0) {
            showWarningAlert("Pin cannot be empty.");
            return false;
        }
        return true;
    }

    function Addrow(add, id) {
        var markup = '<div class="card-panel col l3 m5 s11" id="addDiv-' + id + '">';
        markup += '<div class="row">';
        markup += '<div class="col m12 l12 s12">';
        markup += '<p><span class="name"><b>' + add.Name + '</b></span></p>';
        markup += '<p><span class="address">' + add.AddressDetail + '</span>,<span class="city">' + add.City + '</span>,<span class="state">' + add.State + '</span>-<span class="pin">' + add.Pin + '</span></p>';
        if (add.Landmark.length != 0) {
            markup += '<p><span class="landmark">' + add.Landmark + '</span></p>';
        }
        markup += '<p><b>Phone:</b><span class="phn">' + add.Phone + '</span></p>';
        if (add.AltPhone.length != 0) {
            markup += '<p><b>Alternate Phone:</b><span class="altphn">' + add.AltPhone + '</span></p>';
        }
        markup += '<span class="addressID" style="display:none">' + id + '</span><span class="addressType" style="display:none">' + add.Type + '</span>';
        markup += '</div></div>';
        markup += '<div class="row">';
        markup += '<div class="col s12 m12 l12">';
        markup += '<button class="btn-flat waves-effect deleteLink right"><i class="material-icons">close</i></button>';
        markup += '<button class="btn-flat waves-effect editLink right"><i class="material-icons">create</i></button>';
        markup += '</div>';
        markup += '</div>';
        markup += '</div>';
        $('#panelDiv>.row').append(markup);
    }

    $('#addBtn').on('click', function () {
        if (CheckAddressForm() == false)
            return;
        var addressID = $('#addID').val();
        var postdata = {
            Name: $('#addName').val(),
            Phone: $('#addPhone').val(),
            AltPhone: $('#addAltphone').val(),
            Pin: $('#addPin').val(),
            AddressDetail: $('#addDet').val(),
            City: $('#addCity').val(),
            State: $('#addState').val(),
            Landmark: $('#addLandmark').val(),
            Type: $('input[name=addType]:checked').val(),
            AddressID: addressID
        }

        if (addressID == "")
            AddAddress(postdata);
        else
            EditAddress(postdata);

    });

    $('#pwd').on('click', function () {
        var oldpass = $('#oldPwd').val();
        if (oldpass.length != 8) {
            showWarningAlert("minimum password size is 8.");
            return;
        }
        var pass = $('#newPwd1').val();
        var confirmPass = $('#newPwd2').val();
        if (pass.length != 8) {
            showWarningAlert("minimum password size is 8.");
            return;
        }
        if (pass.length != confirmPass.length || pass != confirmPass) {
            showWarningAlert("password and confirm password are not equal.");
            return;
        }
        ChangePassword(oldpass, pass);
    });

    $(document).on('click', '.editLink' ,function () {
        var panelDiv = $(this).closest('.card-panel');
        var addData = {
            Name: panelDiv.find('.name').text(),
            Phone: panelDiv.find('.phn').text(),
            AltPhone: panelDiv.find('.altphn').text(),
            Pin: panelDiv.find('.pin').text(),
            AddressDetail: panelDiv.find('.address').text(),
            City: panelDiv.find('.city').text(),
            State: panelDiv.find('.state').text(),
            Landmark: panelDiv.find('.landmark').text(),
            Type: panelDiv.find('.addressType').text(),
            AddressID: panelDiv.find('.addressID').text()
        }
        $('.modal-title').html('Edit Address');
        $('#addName').val(addData.Name);
        $('#addPhone').val(addData.Phone);
        $('#addAltphone').val(addData.AltPhone);
        $('#addPin').val(addData.Pin);
        $('#addDet').val(addData.AddressDetail);
        $('#addCity').val(addData.City);
        $('#addState').val(addData.State);
        $('#addLandmark').val(addData.Landmark);
        $('#addID').val(addData.AddressID);
        $('input:radio[name=addType][id=' + addData.Type + ']').prop('checked', true);
        $('#addModal').modal('open');
    });

    $('#addTrigger').on('click', function () {
        $('.modal-title').html('Add Address');
        $('#addName').val("");
        $('#addPhone').val("");
        $('#addAltphone').val("");
        $('#addPin').val("");
        $('#addDet').val("");
        $('#addCity').val("");
        $('#addState').val("");
        $('#addLandmark').val("");
        $('#addID').val("");
        $('input:radio[name=addType][id=Home]').prop('checked', true);
        $('#addModal').modal('open');
    });

    

    $(document).on('click', '.deleteLink' ,function () {
        var addressID = $(this).closest('.card-panel').find('.addressID').text();
        alertify.confirm("Delete Address", "Are you sure?", function () {
            DeleteAddress(addressID);
        }, function () { });
    });

    $('.cancelOrder').on('click', function () {
        var id = $(this).attr('id');
        alertify.confirm("Order Cancellation", "Are you sure?", function () {
            CancelOrder(id);
        }, function () { });
    });

    $('.returnOrder').on('click', function () {
        var id = $(this).attr('id');
        alertify.confirm("Return Order", "Are you sure?", function () {
            ReturnOrder(id);
        }, function () { });
    });

    function AddAddress(obj) {
        $.ajax({
            url: '/Account/AddAddress',
            type: 'POST',
            data: obj,
            beforeSend: function () {
                showSpinner();
            },
            success: function (res) {
                if (res.Success) {
                    showSuccessAlert(res.Message);
                    Addrow(obj, res.data);
                    $('#addModal').modal('close');
                }
                else {
                    showErrorAlert(res.Message);
                }
                hideSpinner();
            }
        });
    }

    function EditAddress(obj) {
        $.ajax({
            url: '/Account/UpdateAddress',
            type: 'POST',
            data: obj,
            beforeSend: function () {
                showSpinner();
            },
            success: function (res) {
                if (res.Success) {
                    showSuccessAlert(res.Message);
                    $('#addDiv-' + obj.AddressID).remove();
                    Addrow(obj, obj.AddressID);
                    $('#addModal').modal('close');
                }
                else {
                    showErrorAlert(res.Message);
                }
                hideSpinner();
            }
        });
    }

    function DeleteAddress(id) {
        $.ajax({
            url: '/Account/DeleteAddress',
            type: 'POST',
            data: { id: id },
            beforeSend: function () {
                showSpinner();
            },
            success: function (res) {
                if (res.Success) {
                    showSuccessAlert(res.Message);
                    $('#addDiv-' + id).remove();
                }
                else {
                    showErrorAlert(res.Message);
                }
                hideSpinner();
            }
        });
    }

    function ChangePassword(oldpass, newpass) {
        var postdata = {
            oldPassword: oldpass,
            newPassword: newpass
        };
        $.ajax({
            url: '@Url.Action("ChangePassword","Account")',
            type: 'POST',
            data: postdata,
            beforeSend: function () {
                showSpinner();
            },
            success: function (res) {
                if (res.Success) {
                    showSuccessAlert(res.Message);
                    $('#pwdModal').modal('close');
                }
                else {
                    showErrorAlert(res.Message);
                }
                hideSpinner();
            }
        });
    }

    function CancelOrder(id) {
        $.ajax({
            url: '@Url.Action("CancelOrder", "Account")',
            type: 'POST',
            data: { id:id },
            beforeSend: function () {
                showSpinner();
            },
            success: function (res) {
                if (res.Success) {
                    showSuccessAlert(res.Message);
                    location.reload();
                }
                else {
                    showErrorAlert(res.Message);
                }
                hideSpinner();
            }
        });
    }

    function ReturnOrder(id) {
        $.ajax({
            url: '@Url.Action("ReturnOrder", "Account")',
            type: 'POST',
            data: { id:id },
            beforeSend: function () {
                showSpinner();
            },
            success: function (res) {
                if (res.Success) {
                    showSuccessAlert(res.Message);
                    location.reload();
                }
                else {
                    showErrorAlert(res.Message);
                }
                hideSpinner();
            }
        });
    }

</script>


